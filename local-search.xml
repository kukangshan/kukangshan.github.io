<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java 学习</title>
    <link href="/2022/04/26/java-%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/04/26/java-%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端</title>
    <link href="/2022/04/26/%E5%89%8D%E7%AB%AF/"/>
    <url>/2022/04/26/%E5%89%8D%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>力扣题目</title>
    <link href="/2022/04/26/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE/"/>
    <url>/2022/04/26/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="4月26号"><a href="#4月26号" class="headerlink" title="4月26号"></a>4月26号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/projection-area-of-3d-shapes/">883. 三维形体投影面积</a></p><h3 id="思考："><a href="#思考：" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思："><a href="#反思：" class="headerlink" title="反思："></a>反思：</h3><h2 id="4月27号"><a href="#4月27号" class="headerlink" title="4月27号"></a>4月27号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/pacific-atlantic-water-flow/">417. 太平洋大西洋水流问题</a></p><h3 id="思考：-1"><a href="#思考：-1" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-1"><a href="#反思：-1" class="headerlink" title="反思："></a>反思：</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>缺</title>
    <link href="/2022/04/22/%E7%BC%BA/"/>
    <url>/2022/04/22/%E7%BC%BA/</url>
    
    <content type="html"><![CDATA[<p>4月22号与3月28号中间隔了28天。</p><p>还是每天都来记录生活。</p><p>正好练习打字来。</p><table><thead><tr><th>日期</th><th>完成情况</th></tr></thead><tbody><tr><td>4&#x2F;22</td><td>yes</td></tr><tr><td>4&#x2F;23</td><td>no</td></tr><tr><td>4&#x2F;24</td><td>no</td></tr><tr><td>4&#x2F;25</td><td>no</td></tr><tr><td>4&#x2F;26</td><td>yes</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="4月26号"><a href="#4月26号" class="headerlink" title="4月26号"></a>4月26号</h2><p>​        果然老是不知自觉地去摸鱼而没有写东西，没有坚持下去。</p><p>​        我昨天凭着我对物理的认识写了文科物理感想。附：</p><h3 id="文科物理感想"><a href="#文科物理感想" class="headerlink" title="文科物理感想"></a>文科物理感想</h3><p>在学习了九周的文科物理，我学到了很多东西，也让我对世界有了很多的不一样的看法。</p><p>在学习的第一章后，我感受生活中物理的重要意义，一些生活中常见的现象蕴含的物理意义也让我感受到奇妙；第二章的电热，更是惊叹不已，简简单单的日出日落，也是复杂的天体运动，其中更是夹杂着力学的魅力，平平常常的烧水，也看得见热量的传递，其中也该是热学的奥秘，对了还有最神秘的光，那即是波又是粒子的性质；让我对于日常的生活也是充满好奇。还有第三章的环宇探微，那块真的是奇妙。广义狭义相对论又见到了。而第四章的各种科技技术也是对于其充满了崇敬。</p><p>最后我发现生活中物理无处不在，文科物理的学习确实让我学到了很多，不仅仅从知识上，还包括对事物的认知和思考。</p><h2 id="4月27号"><a href="#4月27号" class="headerlink" title="4月27号"></a>4月27号</h2><p> 今天凌晨先看力扣题目。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>康康的博客搭建</title>
    <link href="/2022/03/28/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/03/28/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>在磨蹭了好久后，终于搭建自己的博客，什么事情都要去做而不是一直拖延，做完一件事情真的不错的。下面我来简单介绍一下我的博客搭建（Windows，hexo，GitHub）。</p><h2 id="搭建博客所需的工具"><a href="#搭建博客所需的工具" class="headerlink" title="搭建博客所需的工具"></a>搭建博客所需的工具</h2><ul><li>Node.js的<a href="https://nodejs.org/">下载</a></li><li>Git的下载（这个因为我之前学校实验周，和室友就用过Git，所以直接用了，下载可以到csdn或者b站上面看看）</li><li>GitHub的账号————后续博客可以推到远端</li><li>一个可以用的电脑（搭建博客其实没有那么难，很多框架可以用，我就用的hexo）</li></ul><p>ps：在做完node和git下载后，要检查是否下载成功，进入windows“运行”菜单（windows+R）</p><figure class="highlight crmsh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span>;<br>npm -v;<br>git -<span class="hljs-keyword">version</span>;<br></code></pre></td></tr></table></figure><p>还有Hexo下载</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">npm install hexo-cli -g<span class="hljs-comment">;</span><br>hexo -v<span class="hljs-comment">;//检查hexo</span><br></code></pre></td></tr></table></figure><h2 id="搭建仓库"><a href="#搭建仓库" class="headerlink" title="搭建仓库"></a>搭建仓库</h2><p>将Hexo的内容全部放在Github的仓库里，这样就直接让所有人都可以访问。</p><p>注册Github的时候要注意三点：</p><ul><li>账号名（新建仓库的时候会用到）</li><li>邮件名（连接设备的时候会用到）</li><li>密码（验证设备的时候会用到）</li></ul><p>New Repsitory的时候，要注意仓库的名字是账号名.<strong>github.io</strong>(这样格式就可以大家访问到)</p><h2 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH Keys"></a>生成SSH Keys</h2><p>将github与本地进行一个绑定————用到ssh</p><p>进入任意文件夹，git bash，进入小窗口。生成ssh：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">ssh<span class="hljs-comment">;//默认装的，在git安装的时候同时装的</span><br>ssh-keygen -t rsa -C<span class="hljs-string">&quot;github邮件名&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>这样会生成一个<code>.ssh</code>的文件夹，里面会有二个文件，一个<code>id_rsa</code>，一个<code>id_rsa.pub</code>，打开<code>id_rsa.pub</code>,复制里面的代码内容，打开GitHub，找到setting，然后找到SSH keys，add new，然后再key里粘贴原来（公钥）的内容。</p><p>测试ssh是否绑定成功：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><h2 id="本地生成博客内容"><a href="#本地生成博客内容" class="headerlink" title="本地生成博客内容"></a>本地生成博客内容</h2><p>新建一个文件夹（所有博客内容将全在里面）</p><p>hexo的启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo init;<span class="hljs-regexp">//</span>hexo初始化（会在连接github的时候出现问题）<br>hexo s;<span class="hljs-regexp">//</span>静态生成本地页面<br><span class="hljs-regexp">//</span>ctrl+c会直接关闭服务器，本地就会访问不了<br>hexo g;<span class="hljs-regexp">//</span>生成界面<br></code></pre></td></tr></table></figure><h2 id="发布到互联网"><a href="#发布到互联网" class="headerlink" title="发布到互联网"></a>发布到互联网</h2><p>在Blog的文件夹中找到_config.yml文件打开（记事本也可以打开）。进行配置文件的修改。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">deploy：<br>  type: git<span class="hljs-regexp">//</span>双引号和字母要空格<br>  repository： **<span class="hljs-regexp">//</span>就是仓库里的https<br>  branch： main<br></code></pre></td></tr></table></figure><p>在Blog文件中git bash，下载相应的工具：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后就是：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">hexo g<span class="hljs-comment">;</span><br>hexo d<span class="hljs-comment">;//第一次需要验证账号密码</span><br></code></pre></td></tr></table></figure><p>最后就完成。就这些，如果出现问题或者个性化，csdn和b站，关于hexo还是非常多的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/27/hello-world/"/>
    <url>/2022/03/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p><a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a> 约有二十个<a href="https://hexo.io/docs/commands">命令</a>，但普通用户经常使用的大概只有下列几个:</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>新建一篇标题为 my new post的文章，因为标题里有空格，所以加上了引号。</p><ul><li>文章标题可以在对应 md 文件里改，新建时标题可以写的简单些。</li></ul><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server  <span class="hljs-comment">#启动本地服务器，用于预览主题。默认地址： http://localhost:4000/</span><br></code></pre></td></tr></table></figure><ul><li>hexo s 是 hexo server 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；</li><li>对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果</li></ul><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate <span class="hljs-comment">#生成网站静态文件到默认设置的 public 文件夹。</span><br></code></pre></td></tr></table></figure><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li><li>hexo g 是 hexo generate 的缩写，命令效果一致。</li></ul><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy <span class="hljs-comment">#自动生成网站静态文件，并部署到设定的仓库。</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Clean"><a href="#Clean" class="headerlink" title="Clean"></a>Clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean <span class="hljs-comment">#清除缓存文件 db.json 和已生成的静态文件 public 。</span><br></code></pre></td></tr></table></figure><p>清除缓存文件 db.json 和已生成的静态文件 public 。</p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul><p>More info:<a href="https://hexo.io/docs/commands#clean">Clean</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
