<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>暑期考研</title>
    <link href="/2022/06/30/%E6%9A%91%E6%9C%9F%E8%80%83%E7%A0%94/"/>
    <url>/2022/06/30/%E6%9A%91%E6%9C%9F%E8%80%83%E7%A0%94/</url>
    
    <content type="html"><![CDATA[<h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>​        我老是给自己安排一大堆事情，满满当当的，想去做却是老因为突如其来的事情然后就是说一旦计划没有实现一部分就会给自己放松一整天，而这样其实对自己的学习是非常有问题的，所以我要对自己这个长期以来的现象加以改变：</p><p>​        1、如果当时因为其他事情，这个计划出现了未完成的话，可以将计划向下推迟，然后当天结算的时候将计划补在空档其间（周日）</p><p>​        2、如果计划只是因为完成的不够彻底，那么可以将计划移到第二天的相同时间里</p><p>​        3、见机行事</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>git</title>
    <link href="/2022/05/07/git/"/>
    <url>/2022/05/07/git/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java 学习</title>
    <link href="/2022/04/26/java-%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/04/26/java-%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端</title>
    <link href="/2022/04/26/%E5%89%8D%E7%AB%AF/"/>
    <url>/2022/04/26/%E5%89%8D%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>力扣题目</title>
    <link href="/2022/04/26/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE/"/>
    <url>/2022/04/26/%E5%8A%9B%E6%89%A3%E9%A2%98%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="4月26号"><a href="#4月26号" class="headerlink" title="4月26号"></a>4月26号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/projection-area-of-3d-shapes/">883. 三维形体投影面积</a></p><h3 id="思考："><a href="#思考：" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思："><a href="#反思：" class="headerlink" title="反思："></a>反思：</h3><h2 id="4月27号"><a href="#4月27号" class="headerlink" title="4月27号"></a>4月27号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/pacific-atlantic-water-flow/">417. 太平洋大西洋水流问题</a></p><h3 id="思考：-1"><a href="#思考：-1" class="headerlink" title="思考："></a>思考：</h3><p>1、先对靠着海洋的格子进行讨论（特殊情况），设置一个数列direct【result【i】】&#x3D;{1，2，3，4}（左，上，右，下），然后再讨论里面的格子，讨论周围的格子大小，给格子附上下级格子的direct，最后有1、2是太平洋，3、4是大西洋。</p><h3 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-1"><a href="#反思：-1" class="headerlink" title="反思："></a>反思：</h3><h2 id="4月28号"><a href="#4月28号" class="headerlink" title="4月28号"></a>4月28号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/sort-array-by-parity/">905. 按奇偶排序数组</a></p><h3 id="思考：-2"><a href="#思考：-2" class="headerlink" title="思考："></a>思考：</h3><p>1、新建一个数组，扫描整个数组，将num中的数字满足偶数全放前面。</p><h3 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-2"><a href="#反思：-2" class="headerlink" title="反思："></a>反思：</h3><h2 id="4月29号"><a href="#4月29号" class="headerlink" title="4月29号"></a>4月29号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/construct-quad-tree/">427. 建立四叉树</a></p><h3 id="思考：-3"><a href="#思考：-3" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-3"><a href="#反思：-3" class="headerlink" title="反思："></a>反思：</h3><h2 id="4月30号"><a href="#4月30号" class="headerlink" title="4月30号"></a>4月30号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/smallest-range-i/">908. 最小差值 I</a></p><h3 id="思考：-4"><a href="#思考：-4" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解：-4"><a href="#题解：-4" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-4"><a href="#反思：-4" class="headerlink" title="反思："></a>反思：</h3><h2 id="5月5号"><a href="#5月5号" class="headerlink" title="5月5号"></a>5月5号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/subarray-product-less-than-k/">713. 乘积小于 K 的子数组</a></p><h3 id="思考：-5"><a href="#思考：-5" class="headerlink" title="思考："></a>思考：</h3><p>1、从a0往后讨论，循环讨论1项，2项（满足1项的讨论）····的问题</p><p>2、将各个情况讨论转化为整体的讨论，从一个整体出发，比1更加简单。</p><h3 id="题解：-5"><a href="#题解：-5" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-5"><a href="#反思：-5" class="headerlink" title="反思："></a>反思：</h3><p>学习：2分查找+滑动窗口</p><h2 id="5月6号"><a href="#5月6号" class="headerlink" title="5月6号"></a>5月6号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/number-of-recent-calls/">933. 最近的请求次数</a></p><h3 id="思考：-6"><a href="#思考：-6" class="headerlink" title="思考："></a>思考：</h3><p>1、说实话，题目没有看懂。</p><p>2、t往前推3000，然后得到一个范围，确定有多少在其中。</p><h3 id="题解：-6"><a href="#题解：-6" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-6"><a href="#反思：-6" class="headerlink" title="反思："></a>反思：</h3><p>学习：队列、RecentCounter</p><h2 id="5月7号"><a href="#5月7号" class="headerlink" title="5月7号"></a>5月7号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/search-a-2d-matrix-ii/">240. 搜索二维矩阵 II</a></p><h3 id="思考：-7"><a href="#思考：-7" class="headerlink" title="思考："></a>思考：</h3><p>1、从左上角的数值开始（搜索二叉）</p><p>2、对线限制范围</p><h3 id="题解：-7"><a href="#题解：-7" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-7"><a href="#反思：-7" class="headerlink" title="反思："></a>反思：</h3><h2 id="5月8号"><a href="#5月8号" class="headerlink" title="5月8号"></a>5月8号</h2><p>今日题目：<a href="https://leetcode-cn.com/problems/find-all-duplicates-in-an-array/">442. 数组中重复的数据</a></p><h3 id="思考：-8"><a href="#思考：-8" class="headerlink" title="思考："></a>思考：</h3><p>n^2很简单，n的话还是思考一下。</p><h3 id="题解：-8"><a href="#题解：-8" class="headerlink" title="题解："></a>题解：</h3><h3 id="反思：-8"><a href="#反思：-8" class="headerlink" title="反思："></a>反思：</h3><p>我连<code>时间复杂度</code>都忘记了差不多了</p><h2 id="8月30号"><a href="#8月30号" class="headerlink" title="8月30号"></a>8月30号</h2><p>今日题目：<a href="https://leetcode.cn/problems/maximum-binary-tree-ii/">998. 最大二叉树 II</a></p><h3 id="思考：-9"><a href="#思考：-9" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解：-9"><a href="#题解：-9" class="headerlink" title="题解："></a>题解：</h3><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Definition for a binary tree node.</span><br><span class="hljs-comment"> * struct TreeNode &#123;</span><br><span class="hljs-comment"> *     int val;</span><br><span class="hljs-comment"> *     TreeNode *left;</span><br><span class="hljs-comment"> *     TreeNode *right;</span><br><span class="hljs-comment"> *     TreeNode() : val(0), left(nullptr), right(nullptr) &#123;&#125;</span><br><span class="hljs-comment"> *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) &#123;&#125;</span><br><span class="hljs-comment"> *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) &#123;&#125;</span><br><span class="hljs-comment"> * &#125;;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">TreeNode* <span class="hljs-title">insertIntoMaxTree</span><span class="hljs-params">(TreeNode* root, <span class="hljs-type">int</span> val)</span> </span>&#123;<br>        TreeNode* parent = <span class="hljs-literal">nullptr</span>;<br>        <span class="hljs-comment">//对于题目会出现的其子节点比val小的情况，一开始的根节点没有parent</span><br>        TreeNode* cur = root;<br>        <span class="hljs-comment">//当前研究对象，因有向下遍历的情况，研究对象要改变</span><br>        <span class="hljs-keyword">while</span> (cur) &#123;<br>            <span class="hljs-comment">//遍历到最后其为null，即跳出循环</span><br>            <span class="hljs-keyword">if</span> (val &gt; cur-&gt;val) &#123;<br>                <span class="hljs-comment">//val要插入其中，利用TreeNode</span><br>                <span class="hljs-keyword">if</span> (!parent) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">TreeNode</span>(val, root, <span class="hljs-literal">nullptr</span>);<br>                    <span class="hljs-comment">//实例一：val直接比根节点大，root直接在val的左子节点，nullptr很重要——判断cur</span><br>                &#125;<br>                TreeNode* node = <span class="hljs-keyword">new</span> <span class="hljs-built_in">TreeNode</span>(val, cur, <span class="hljs-literal">nullptr</span>);<br>                <span class="hljs-comment">//首先把原来的cur和val组成一个新的节点</span><br>                parent-&gt;right = node;<br>                <span class="hljs-comment">//把新的节点接到原来parent下，因为cur一直就是比较cur—right</span><br>                <span class="hljs-keyword">return</span> root;<span class="hljs-comment">//实例三</span><br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">//即是val比当前根节点大，那么往右节点遍历</span><br>                parent = cur;<br>                cur = cur-&gt;right;<br>                <span class="hljs-comment">//研究cur的右节点</span><br>            &#125;<br>        &#125;<br>        parent-&gt;right = <span class="hljs-keyword">new</span> <span class="hljs-built_in">TreeNode</span>(val);<br>        <span class="hljs-comment">//发现所有右节点比val大，那么接到parent后面，因为parent-right就是cur，但是为空</span><br>        <span class="hljs-keyword">return</span> root;<span class="hljs-comment">//实例二</span><br>    &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure><h3 id="反思：-9"><a href="#反思：-9" class="headerlink" title="反思："></a>反思：</h3><h2 id="9月1号"><a href="#9月1号" class="headerlink" title="9月1号"></a>9月1号</h2><p>今日题目：<a href="https://leetcode.cn/problems/final-prices-with-a-special-discount-in-a-shop/">1475. 商品折扣后的最终价格</a></p><h3 id="思考：-10"><a href="#思考：-10" class="headerlink" title="思考："></a>思考：</h3><h3 id="题解：-10"><a href="#题解：-10" class="headerlink" title="题解："></a>题解：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">finalPrices</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; prices)</span> </span>&#123;<br>        <span class="hljs-comment">//vector 就是数组——————待解</span><br>        <span class="hljs-type">int</span> n = prices.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-comment">//获得数组的长度用于遍历</span><br>        vector&lt;<span class="hljs-type">int</span>&gt; ans;<br>        <span class="hljs-comment">//数组获得折扣后的价格</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>            <span class="hljs-comment">//从第一个价格开始往后遍历</span><br>            <span class="hljs-type">int</span> discount = <span class="hljs-number">0</span>;<br>            <span class="hljs-comment">//对于每个价格重置折扣</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt; n; ++j) &#123;<br>                <span class="hljs-comment">//从i的后面即是i+1，开始遍历，所有时间复杂度是O(n^2)</span><br>                <span class="hljs-keyword">if</span>(prices[j] &lt;= prices[i])&#123;<br>                    discount = prices[j];<br>                    <span class="hljs-comment">//第一个满足条件的数就是discount</span><br>                    <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-comment">//满足条件直接跳出，不然就是discount一直是0</span><br>                &#125;<br>            &#125;<br>            ans.<span class="hljs-built_in">emplace_back</span>(prices[i] - discount);<br>            <span class="hljs-comment">//如果没有折扣那么就会返回原价</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure><h3 id="反思：-10"><a href="#反思：-10" class="headerlink" title="反思："></a>反思：</h3><p>vector？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>缺</title>
    <link href="/2022/04/22/%E7%BC%BA/"/>
    <url>/2022/04/22/%E7%BC%BA/</url>
    
    <content type="html"><![CDATA[<p>4月22号与3月28号中间隔了28天。</p><p>还是每天都来记录生活。</p><p>正好练习打字来。</p><table><thead><tr><th>日期</th><th>完成情况</th></tr></thead><tbody><tr><td>4&#x2F;22</td><td>yes</td></tr><tr><td>4&#x2F;23</td><td>no</td></tr><tr><td>4&#x2F;24</td><td>no</td></tr><tr><td>4&#x2F;25</td><td>no</td></tr><tr><td>4&#x2F;26</td><td>yes</td></tr><tr><td>4&#x2F;27</td><td>yes</td></tr><tr><td>4&#x2F;28</td><td>yes</td></tr><tr><td>4&#x2F;29</td><td>no(30号凌晨补)</td></tr><tr><td>4&#x2F;30</td><td>no</td></tr></tbody></table><h2 id="4月26号"><a href="#4月26号" class="headerlink" title="4月26号"></a>4月26号</h2><p>​        果然老是不知自觉地去摸鱼而没有写东西，没有坚持下去。</p><p>​        我昨天凭着我对物理的认识写了文科物理感想。附：</p><h3 id="文科物理感想"><a href="#文科物理感想" class="headerlink" title="文科物理感想"></a>文科物理感想</h3><p>在学习了九周的文科物理，我学到了很多东西，也让我对世界有了很多的不一样的看法。</p><p>在学习的第一章后，我感受生活中物理的重要意义，一些生活中常见的现象蕴含的物理意义也让我感受到奇妙；第二章的电热，更是惊叹不已，简简单单的日出日落，也是复杂的天体运动，其中更是夹杂着力学的魅力，平平常常的烧水，也看得见热量的传递，其中也该是热学的奥秘，对了还有最神秘的光，那即是波又是粒子的性质；让我对于日常的生活也是充满好奇。还有第三章的环宇探微，那块真的是奇妙。广义狭义相对论又见到了。而第四章的各种科技技术也是对于其充满了崇敬。</p><p>最后我发现生活中物理无处不在，文科物理的学习确实让我学到了很多，不仅仅从知识上，还包括对事物的认知和思考。</p><h2 id="4月27号"><a href="#4月27号" class="headerlink" title="4月27号"></a>4月27号</h2><p> 今天凌晨先看力扣题目。</p><p>下午就是在整理桌子，做了架子。</p><p>晚上还吃了火锅，吃完火锅来看看题目。写出了一点的思路。</p><h2 id="4月28号"><a href="#4月28号" class="headerlink" title="4月28号"></a>4月28号</h2><p>下午去104学习学了一会，发现没有考点支撑，什么题目都不会。</p><p>对了，力扣还没写。</p><h2 id="4月29号"><a href="#4月29号" class="headerlink" title="4月29号"></a>4月29号</h2><p>无</p><h2 id="4月30号（补29号）"><a href="#4月30号（补29号）" class="headerlink" title="4月30号（补29号）"></a>4月30号（补29号）</h2><p>补一下29号的空缺，把高数第一章的题目知识点看完，30号才好进行第二章的学习，以后要给自己定义一下yes完成情况的要求。</p><p>还有第二天的力扣题目。</p><p>今天5号，我前天去图书馆学习了一天，然后今天就是属于自己给放假，明天继续学习，继续深度学习。</p><table><thead><tr><th>日期</th><th>完成情况</th></tr></thead><tbody><tr><td>5&#x2F;5</td><td>yes</td></tr><tr><td>5&#x2F;6</td><td>yes</td></tr><tr><td>5&#x2F;7</td><td>no（8号早上补了）</td></tr><tr><td>5&#x2F;8</td><td>no</td></tr><tr><td>5&#x2F;9-10</td><td>no</td></tr><tr><td>5&#x2F;11</td><td>yes</td></tr><tr><td>5&#x2F;12</td><td>yes</td></tr><tr><td>5&#x2F;13-15</td><td>no</td></tr><tr><td>5&#x2F;16</td><td>yes</td></tr><tr><td>5&#x2F;17</td><td>yes</td></tr></tbody></table><h2 id="5月5号"><a href="#5月5号" class="headerlink" title="5月5号"></a>5月5号</h2><p>给自己制定一个强制的计划来，必须完成。</p><p><strong>计划：</strong></p><table><thead><tr><th>科目</th><th>计划</th></tr></thead><tbody><tr><td>高数</td><td>一章</td></tr><tr><td>英语</td><td>半张&#x2F;一张</td></tr><tr><td>代码</td><td>一题（45分钟，多的时间看看相关的课程）</td></tr><tr><td>阅读</td><td>半小时（1点前睡觉）</td></tr></tbody></table><p>补充：高数留下的问题放在星期六，星期日解决；平时课程问题放在周末学习。</p><h2 id="5月6号"><a href="#5月6号" class="headerlink" title="5月6号"></a>5月6号</h2><p>时间的安排自由度其实还是在自己的。</p><p>吃饭前，看了题目。</p><p>然后回来问了一下听力怎么进步。随之我就摸鱼，然后就是写题目。</p><h2 id="5月8号"><a href="#5月8号" class="headerlink" title="5月8号"></a>5月8号</h2><p>我凌晨补完一二章的知识点，今天的话大概率上机，然后学习一些平时上课的知识点。</p><h2 id="5月11、12、16号"><a href="#5月11、12、16号" class="headerlink" title="5月11、12、16号"></a>5月11、12、16号</h2><p>三天晚上就打了代码，其实这就是打字的训练+语言的学习。</p><h2 id="5月17号"><a href="#5月17号" class="headerlink" title="5月17号"></a>5月17号</h2><p>什么事情都没有做，反思了一下自己。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>康康的博客搭建</title>
    <link href="/2022/03/28/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/03/28/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>在磨蹭了好久后，终于搭建自己的博客，什么事情都要去做而不是一直拖延，做完一件事情真的不错的。下面我来简单介绍一下我的博客搭建（Windows，hexo，GitHub）。</p><h2 id="搭建博客所需的工具"><a href="#搭建博客所需的工具" class="headerlink" title="搭建博客所需的工具"></a>搭建博客所需的工具</h2><ul><li>Node.js的<a href="https://nodejs.org/">下载</a></li><li>Git的下载（这个因为我之前学校实验周，和室友就用过Git，所以直接用了，下载可以到csdn或者b站上面看看）</li><li>GitHub的账号————后续博客可以推到远端</li><li>一个可以用的电脑（搭建博客其实没有那么难，很多框架可以用，我就用的hexo）</li></ul><p>ps：在做完node和git下载后，要检查是否下载成功，进入windows“运行”菜单（windows+R）</p><figure class="highlight crmsh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span>;<br>npm -v;<br>git -<span class="hljs-keyword">version</span>;<br></code></pre></td></tr></table></figure><p>还有Hexo下载</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">npm install hexo-cli -g<span class="hljs-comment">;</span><br>hexo -v<span class="hljs-comment">;//检查hexo</span><br></code></pre></td></tr></table></figure><h2 id="搭建仓库"><a href="#搭建仓库" class="headerlink" title="搭建仓库"></a>搭建仓库</h2><p>将Hexo的内容全部放在Github的仓库里，这样就直接让所有人都可以访问。</p><p>注册Github的时候要注意三点：</p><ul><li>账号名（新建仓库的时候会用到）</li><li>邮件名（连接设备的时候会用到）</li><li>密码（验证设备的时候会用到）</li></ul><p>New Repsitory的时候，要注意仓库的名字是账号名.<strong>github.io</strong>(这样格式就可以大家访问到)</p><h2 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH Keys"></a>生成SSH Keys</h2><p>将github与本地进行一个绑定————用到ssh</p><p>进入任意文件夹，git bash，进入小窗口。生成ssh：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">ssh<span class="hljs-comment">;//默认装的，在git安装的时候同时装的</span><br>ssh-keygen -t rsa -C<span class="hljs-string">&quot;github邮件名&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>这样会生成一个<code>.ssh</code>的文件夹，里面会有二个文件，一个<code>id_rsa</code>，一个<code>id_rsa.pub</code>，打开<code>id_rsa.pub</code>,复制里面的代码内容，打开GitHub，找到setting，然后找到SSH keys，add new，然后再key里粘贴原来（公钥）的内容。</p><p>测试ssh是否绑定成功：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><h2 id="本地生成博客内容"><a href="#本地生成博客内容" class="headerlink" title="本地生成博客内容"></a>本地生成博客内容</h2><p>新建一个文件夹（所有博客内容将全在里面）</p><p>hexo的启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo init;<span class="hljs-regexp">//</span>hexo初始化（会在连接github的时候出现问题）<br>hexo s;<span class="hljs-regexp">//</span>静态生成本地页面<br><span class="hljs-regexp">//</span>ctrl+c会直接关闭服务器，本地就会访问不了<br>hexo g;<span class="hljs-regexp">//</span>生成界面<br></code></pre></td></tr></table></figure><h2 id="发布到互联网"><a href="#发布到互联网" class="headerlink" title="发布到互联网"></a>发布到互联网</h2><p>在Blog的文件夹中找到_config.yml文件打开（记事本也可以打开）。进行配置文件的修改。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">deploy：<br>  type: git<span class="hljs-regexp">//</span>双引号和字母要空格<br>  repository： **<span class="hljs-regexp">//</span>就是仓库里的https<br>  branch： main<br></code></pre></td></tr></table></figure><p>在Blog文件中git bash，下载相应的工具：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后就是：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">hexo g<span class="hljs-comment">;</span><br>hexo d<span class="hljs-comment">;//第一次需要验证账号密码</span><br></code></pre></td></tr></table></figure><p>最后就完成。就这些，如果出现问题或者个性化，csdn和b站，关于hexo还是非常多的。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/03/27/hello-world/"/>
    <url>/2022/03/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p><a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a> 约有二十个<a href="https://hexo.io/docs/commands">命令</a>，但普通用户经常使用的大概只有下列几个:</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>新建一篇标题为 my new post的文章，因为标题里有空格，所以加上了引号。</p><ul><li>文章标题可以在对应 md 文件里改，新建时标题可以写的简单些。</li></ul><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server  <span class="hljs-comment">#启动本地服务器，用于预览主题。默认地址： http://localhost:4000/</span><br></code></pre></td></tr></table></figure><ul><li>hexo s 是 hexo server 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；</li><li>对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果</li></ul><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate <span class="hljs-comment">#生成网站静态文件到默认设置的 public 文件夹。</span><br></code></pre></td></tr></table></figure><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li><li>hexo g 是 hexo generate 的缩写，命令效果一致。</li></ul><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy <span class="hljs-comment">#自动生成网站静态文件，并部署到设定的仓库。</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Clean"><a href="#Clean" class="headerlink" title="Clean"></a>Clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean <span class="hljs-comment">#清除缓存文件 db.json 和已生成的静态文件 public 。</span><br></code></pre></td></tr></table></figure><p>清除缓存文件 db.json 和已生成的静态文件 public 。</p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul><p>More info:<a href="https://hexo.io/docs/commands#clean">Clean</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
